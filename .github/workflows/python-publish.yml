name: Python Package CI/CD (Hybrid Approach)

on:
  push:
    branches:
      - develop               # Continuous deployment to TestPyPI
      - release/*             # Pre-release deployment to TestPyPI
      - hotfix/*              # Hotfix deployment to TestPyPI
      - main                  # Test before tagging stable releases
    tags:
      - "v*.*.*"              # Stable releases deployment to PyPI

  pull_request:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build setuptools-scm

      - name: Build the package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Install the package
        run: |
          pip install dist/*.whl
          python -c "from sideqr import QRScanner"

  deploy-testpypi:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/develop' ||
      startsWith(github.ref, 'refs/heads/release/') ||
      startsWith(github.ref, 'refs/heads/hotfix/')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Twine
        run: pip install --upgrade twine

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository testpypi dist/* --verbose

  deploy-pypi:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Twine
        run: pip install --upgrade twine

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/* --verbose
